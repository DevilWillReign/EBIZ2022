# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions

name: Build and deploy container app to Azure Web App - appritstore

on:
  push:
    branches:
      - master
  workflow_dispatch:

env:
  API_PORT: ${{ secrets.API_PORT }}
  FRONT_PORT: 80
  API_HOST_CALLBACK: ${{ secrets.API_HOST_CALLBACK }}
  FRONT_HOST: ${{ secrets.FRONT_HOST }}
  API_BASE_URL: ${{ secrets.API_BASE_URL }}
  SESSION_SECRET: ${{ secrets.SESSION_SECRET }}
  JWT_SECRET: ${{ secrets.JWT_SECRET }}
  GOOGLE_OAUTH_CLIENT_ID: ${{ secrets.GOOGLE_OAUTH_CLIENT_ID }}
  GOOGLE_OAUTH_CLIENT_SECRET: ${{ secrets.GOOGLE_OAUTH_CLIENT_SECRET }}
  GH_OAUTH_CLIENT_ID: ${{ secrets.GH_OAUTH_CLIENT_ID }}
  GH_OAUTH_CLIENT_SECRET: ${{ secrets.GH_OAUTH_CLIENT_SECRET }}
  GL_OAUTH_CLIENT_ID: ${{ secrets.GL_OAUTH_CLIENT_ID }}
  GL_OAUTH_CLIENT_SECRET: ${{ secrets.GL_OAUTH_CLIENT_SECRET }}

jobs:
  build:
    runs-on: 'ubuntu-latest'

    steps:
    - uses: actions/checkout@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Log in to registry
      uses: docker/login-action@v1
      with:
        registry: https://apprit.azurecr.io/
        username: ${{ secrets.AzureAppService_ContainerUsername_f773627d499b43c694520aaae5cf917f }}
        password: ${{ secrets.AzureAppService_ContainerPassword_e61f7ed2991c4229b242cde6ff3c9c7c }}

        
    - name: Build and push container back image to registry
      uses: docker/build-push-action@v2
      with:
        build-args: |
          ARG_FRONT_PORT=${{ env.FRONT_PORT }}
          ARG_API_BASE_URL=${{ env.API_BASE_URL }}
          ARG_API_PORT=${{ env.API_PORT }}
          ARG_API_HOST_CALLBACK=${{ env.API_HOST_CALLBACK }}
          ARG_FRONT_HOST=${{ env.FRONT_HOST }}
          ARG_SESSION_SECRET=${{ env.SESSION_SECRET }}
          ARG_JWT_SECRET=${{ env.JWT_SECRET }}
          ARG_GOOGLE_OAUTH_CLIENT_ID=${{ env.GOOGLE_OAUTH_CLIENT_ID }}
          ARG_GOOGLE_OAUTH_CLIENT_SECRET=${{ env.GOOGLE_OAUTH_CLIENT_SECRET }}
          ARG_GH_OAUTH_CLIENT_ID=${{ env.GH_OAUTH_CLIENT_ID }}
          ARG_GH_OAUTH_CLIENT_SECRET=${{ env.GH_OAUTH_CLIENT_SECRET }}
          ARG_GL_OAUTH_CLIENT_ID=${{ env.GL_OAUTH_CLIENT_ID }}
          ARG_GL_OAUTH_CLIENT_SECRET=${{ env.GL_OAUTH_CLIENT_SECRET }}
        push: true
        tags: apprit.azurecr.io/${{ secrets.AzureAppService_ContainerUsername_f773627d499b43c694520aaae5cf917f }}/appritback:${{ github.sha }}
        file: ./Dockerfile

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
    - name: Deploy front to Azure Web App
      id: deploy-front-to-webapp
      uses: azure/webapps-deploy@v2
      with:
        app-name: 'appritstore'
        slot-name: 'production'
        publish-profile: ${{ secrets.AzureAppService_PublishProfile_ef29c38d3ed44935a31269c2ad25437d }}
        images: 'apprit.azurecr.io/${{ secrets.AzureAppService_ContainerUsername_f773627d499b43c694520aaae5cf917f }}/appritstore:${{ github.sha }}'
        
    - name: Deploy back to Azure Web App
      id: deploy-back-to-webapp
      uses: azure/webapps-deploy@v2
      with:
        app-name: 'appritback'
        slot-name: 'production'
        publish-profile: ${{ secrets.AzureAppService_PublishProfile_Back }}
        images: 'apprit.azurecr.io/${{ secrets.AzureAppService_ContainerUsername_f773627d499b43c694520aaae5cf917f }}/appritback:${{ github.sha }}'
